var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
// const { async } = require("q");
// import icons from '../img/icons.svg'; // Works in parcel 1 
var _iconsSvg = require("url:../img/icons.svg");
var _iconsSvgDefault = parcelHelpers.interopDefault(_iconsSvg);
var _stable = require("core-js/stable");
var _runtime = require("regenerator-runtime/runtime");
var _model = require("./model");
var _recipeView = require("./views/recipeView");
var _recipeViewDefault = parcelHelpers.interopDefault(_recipeView);
console.log(_iconsSvgDefault.default);
const recipeContainer = document.querySelector('.recipe');
const timeout = function(s) {
    return new Promise(function(_, reject) {
        setTimeout(function() {
            reject(new Error(`Request took too long! Timeout after ${s} second`));
        }, s * 1000);
    });
};
const renderSpinner = function(parentEl) {
    const markup = `\n        <div class="spinner">\n          <svg>\n            <use href="${_iconsSvgDefault.default}#icon-loader"></use> \n          </svg>\n        </div>\n  `;
    parentEl.innerHTML = "";
    parentEl.insertAdjacentHTML('afterbegin', markup);
};
const showRecipe = (async function() {
    try {
        const id = window.location.hash.slice(1);
        if (!id) return;
        // 1) Loading recipe 
        // const res = await fetch('https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bcc40');
        renderSpinner(recipeContainer);
        await _model.loadRecipe(id);
        // 2) Rendering recipe 
        _recipeViewDefault.default.render(_model.state.recipe);
    } catch (err) {
        // recipeContainer.innerHTML = "";
        console.log(err);
    }
})['load'].forEach((event)=>window.addEventListener(event, showRecipe)
);
